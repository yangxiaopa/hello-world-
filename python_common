浮点数间的运算存在不确定尾数（不确定尾数一般发生在十进制数的10^-16位左右），不是bug
浮点数1.1 的小数部分由53位二进制来表示，约10^-16, 计算机二进制与十进制间不存在对等关系，只能截取53位二进制数来无限接近0.1但不同
round(x,d)  #对x四舍五入，d是小数截取位数，浮点数间运算及比较可用round函数辅助
------------------------------------------------------------------------
复数类型
z.real
z.image
------------
数值运算操作符
+ - * /（除，10/3=3.3333...） //（#整数除，10//3=3） %（#余数，10%3=1） ** （#幂运算，x**y=x^y）
--------------------------------------------------------------------------------------------
数值函数
abs(x)
divmod(x,y) #商余（x//y,x%y),同时输出商余 divmod(10,3)=(3,1)
pow(x,y[z]) #幂余，（x**y）%z []表示参数z可省略
round(x,[d]) #四舍五入，d是保留小数位数，默认值为0 round（-10.123,2)=-10.12
max()
min()
int(x)  #将x变为整数，舍弃小数部分
float(x) #将x变成浮点数，增加小数部分
complex(x) #将整数变为复数，增加虚部

